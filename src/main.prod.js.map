{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/main.dev.js","webpack:///external \"electron\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_electron","menu","template","mainWindow","app","on","quit","toggleAlwaysOnTop","nextValue","isAlwaysOnTop","setAlwaysOnTop","process","platform","items","submenu","checked","BrowserWindow","show","width","height","useContentHeight","titleBarStyle","loadURL","__dirname","webContents","focus","label","selector","type","accelerator","click","setFullScreen","isFullScreen","toggleDevTools","send","shell","openExternal","Menu","buildFromTemplate","setApplicationMenu","setMenu","require"],"mappings":"2BACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QA0DA,OArDAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,wEClFA,IAAAC,EAAApC,EAAA,YAEIqC,SACAC,SACAC,EAAa,KAMjBC,MAAIC,GAAG,oBAAqBD,MAAIE,MAEhCF,MAAIC,GAAG,QAAS,WAUd,SAASE,IACP,IAAMC,GAAaL,EAAWM,gBAC9BN,EAAWO,eAAeF,IAGH,WAArBG,QAAQC,SACJX,EAAKY,MAAM,GAAGC,QAAQD,MAAM,GAC5BZ,EAAKY,MAAM,GAAGC,QAAQD,MAAM,IACzBE,QAAUP,GAjBrBL,EAAa,IAAIa,gBAAc,CAC7BC,MAAM,EACNC,MAAO,IACPC,OAAQ,IACRC,kBAAkB,EAClBC,cAAe,iBAeNC,QAAX,UAA6BC,UAA7B,aAEApB,EAAWqB,YAAYnB,GAAG,kBAAmB,WAC3CF,EAAWc,OACXd,EAAWsB,UAGY,WAArBd,QAAQC,UACVV,EAAW,CACT,CACEwB,MAAO,aACPZ,QAAS,CACP,CAAEY,MAAO,mBAAoBC,SAAU,iCACvC,CAAEC,KAAM,aACR,CAAEF,MAAO,kBAAmBG,YAAa,YAAaF,SAAU,SAChE,CACED,MAAO,cACPG,YAAa,mBACbF,SAAU,0BAEZ,CAAED,MAAO,WAAYC,SAAU,0BAC/B,CAAEC,KAAM,aACR,CACEF,MAAO,OACPG,YAAa,YACbC,MAHF,WAII1B,MAAIE,WAKZ,CACEoB,MAAO,OACPZ,QAAS,CACP,CAAEY,MAAO,OAAQG,YAAa,YAAaF,SAAU,SACrD,CAAED,MAAO,OAAQG,YAAa,kBAAmBF,SAAU,SAC3D,CAAEC,KAAM,aACR,CAAEF,MAAO,MAAOG,YAAa,YAAaF,SAAU,QACpD,CAAED,MAAO,OAAQG,YAAa,YAAaF,SAAU,SACrD,CAAED,MAAO,QAASG,YAAa,YAAaF,SAAU,UACtD,CAAED,MAAO,aAAcG,YAAa,YAAaF,SAAU,gBAG/D,CACED,MAAO,OACPZ,QAwBM,CACE,CACEY,MAAO,qBACPG,YAAa,iBACbC,MAHF,WAII3B,EAAW4B,eAAe5B,EAAW6B,kBAGzC,CACEN,MAAO,yBACPG,YAAa,gBACbC,MAHF,WAII3B,EAAW8B,mBAGf,CACEP,MAAO,mBACPI,MAFF,WAGI3B,EAAWqB,YAAYU,KAAK,wBAK1C,CACER,MAAO,SACPZ,QAAS,CACP,CACEc,KAAM,WACNF,MAAO,gBACPI,MAHF,WAIIvB,MAGJ,CAAEqB,KAAM,aACR,CAAEF,MAAO,WAAYG,YAAa,YAAaF,SAAU,uBACzD,CAAEC,KAAM,aACR,CAAEF,MAAO,qBAAsBC,SAAU,qBAG7C,CACED,MAAO,OACPZ,QAAS,CACP,CACEY,MAAO,kBACPI,MAFF,WAGIK,QAAMC,aAAa,kDAO7BnC,EAAOoC,OAAKC,kBAAkBpC,GAC9BmC,OAAKE,mBAAmBtC,KAExBC,EAAW,CACT,CACEwB,MAAO,QACPZ,QAAS,IAEX,CACEY,MAAO,QACPZ,QAyBM,CACE,CACEc,KAAM,WACNF,MAAO,gBACPI,MAHF,WAIIvB,MAGJ,CACEmB,MAAO,0BACPG,YAAa,aACbC,MAHF,WAII3B,EAAW8B,mBAGf,CACEP,MAAO,sBACPG,YAAa,MACbC,MAHF,WAII3B,EAAW4B,eAAe5B,EAAW6B,oBAKnD,CACEN,MAAO,OACPZ,QAAS,CACP,CACEY,MAAO,kBACPI,MAFF,WAGIK,QAAMC,aAAa,kDAM7BnC,EAAOoC,OAAKC,kBAAkBpC,GAC9BC,EAAWqC,QAAQvC,8BClOvBlC,EAAAD,QAAA2E,QAAA","file":"./app/main.prod.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/main.dev.js\");\n","import { app, BrowserWindow, Menu, shell } from \"electron\"\n\nlet menu\nlet template\nlet mainWindow = null\n\nif (process.env.NODE_ENV === \"development\") {\n  require(\"electron-debug\")()\n}\n\napp.on(\"window-all-closed\", app.quit)\n\napp.on(\"ready\", () => {\n  mainWindow = new BrowserWindow({\n    show: false,\n    width: 650,\n    height: 800,\n    useContentHeight: true,\n    titleBarStyle: \"hiddenInset\",\n  })\n\n  // toggle the menu on top/bottom\n  function toggleAlwaysOnTop() {\n    const nextValue = !mainWindow.isAlwaysOnTop()\n    mainWindow.setAlwaysOnTop(nextValue)\n    // fragile way of getting the Always On Top\n    const menuItem =\n      process.platform === \"darwin\"\n        ? menu.items[3].submenu.items[0]\n        : menu.items[1].submenu.items[0]\n    menuItem.checked = nextValue\n  }\n\n  mainWindow.loadURL(`file://${__dirname}/app.html`)\n\n  mainWindow.webContents.on(\"did-finish-load\", () => {\n    mainWindow.show()\n    mainWindow.focus()\n  })\n\n  if (process.platform === \"darwin\") {\n    template = [\n      {\n        label: \"Reactotron\",\n        submenu: [\n          { label: \"About Reactotron\", selector: \"orderFrontStandardAboutPanel:\" },\n          { type: \"separator\" },\n          { label: \"Hide Reactotron\", accelerator: \"Command+H\", selector: \"hide:\" },\n          {\n            label: \"Hide Others\",\n            accelerator: \"Command+Option+H\",\n            selector: \"hideOtherApplications:\",\n          },\n          { label: \"Show All\", selector: \"unhideAllApplications:\" },\n          { type: \"separator\" },\n          {\n            label: \"Quit\",\n            accelerator: \"Command+Q\",\n            click() {\n              app.quit()\n            },\n          },\n        ],\n      },\n      {\n        label: \"Edit\",\n        submenu: [\n          { label: \"Undo\", accelerator: \"Command+Z\", selector: \"undo:\" },\n          { label: \"Redo\", accelerator: \"Shift+Command+Z\", selector: \"redo:\" },\n          { type: \"separator\" },\n          { label: \"Cut\", accelerator: \"Command+X\", selector: \"cut:\" },\n          { label: \"Copy\", accelerator: \"Command+C\", selector: \"copy:\" },\n          { label: \"Paste\", accelerator: \"Command+V\", selector: \"paste:\" },\n          { label: \"Select All\", accelerator: \"Command+A\", selector: \"selectAll:\" },\n        ],\n      },\n      {\n        label: \"View\",\n        submenu:\n          process.env.NODE_ENV === \"development\"\n            ? [\n                {\n                  label: \"Reload\",\n                  accelerator: \"Command+R\",\n                  click() {\n                    mainWindow.webContents.reload()\n                  },\n                },\n                {\n                  label: \"Toggle Developer Tools\",\n                  accelerator: \"Alt+Command+I\",\n                  click() {\n                    mainWindow.toggleDevTools()\n                  },\n                },\n                {\n                  label: \"Toggle Side Menu\",\n                  click() {\n                    mainWindow.webContents.send(\"toggle-side-menu\")\n                  },\n                },\n              ]\n            : [\n                {\n                  label: \"Toggle Full Screen\",\n                  accelerator: \"Ctrl+Command+F\",\n                  click() {\n                    mainWindow.setFullScreen(!mainWindow.isFullScreen())\n                  },\n                },\n                {\n                  label: \"Toggle Developer Tools\",\n                  accelerator: \"Alt+Command+I\",\n                  click() {\n                    mainWindow.toggleDevTools()\n                  },\n                },\n                {\n                  label: \"Toggle Side Menu\",\n                  click() {\n                    mainWindow.webContents.send(\"toggle-side-menu\")\n                  },\n                },\n              ],\n      },\n      {\n        label: \"Window\",\n        submenu: [\n          {\n            type: \"checkbox\",\n            label: \"Always On Top\",\n            click() {\n              toggleAlwaysOnTop()\n            },\n          },\n          { type: \"separator\" },\n          { label: \"Minimize\", accelerator: \"Command+M\", selector: \"performMiniaturize:\" },\n          { type: \"separator\" },\n          { label: \"Bring All to Front\", selector: \"arrangeInFront:\" },\n        ],\n      },\n      {\n        label: \"Help\",\n        submenu: [\n          {\n            label: \"Visit on Github\",\n            click() {\n              shell.openExternal(\"https://github.com/infinitered/reactotron\")\n            },\n          },\n        ],\n      },\n    ]\n\n    menu = Menu.buildFromTemplate(template)\n    Menu.setApplicationMenu(menu)\n  } else {\n    template = [\n      {\n        label: \"&File\",\n        submenu: [],\n      },\n      {\n        label: \"&View\",\n        submenu:\n          process.env.NODE_ENV === \"development\"\n            ? [\n                {\n                  type: \"checkbox\",\n                  label: \"Always On Top\",\n                  click() {\n                    toggleAlwaysOnTop(this)\n                  },\n                },\n                {\n                  label: \"&Reload\",\n                  accelerator: \"Ctrl+R\",\n                  click() {\n                    mainWindow.webContents.reload()\n                  },\n                },\n                {\n                  label: \"Toggle &Developer Tools\",\n                  accelerator: \"Alt+Ctrl+I\",\n                  click() {\n                    mainWindow.toggleDevTools()\n                  },\n                },\n              ]\n            : [\n                {\n                  type: \"checkbox\",\n                  label: \"Always On Top\",\n                  click() {\n                    toggleAlwaysOnTop(this)\n                  },\n                },\n                {\n                  label: \"Toggle &Developer Tools\",\n                  accelerator: \"Alt+Ctrl+I\",\n                  click() {\n                    mainWindow.toggleDevTools()\n                  },\n                },\n                {\n                  label: \"Toggle &Full Screen\",\n                  accelerator: \"F11\",\n                  click() {\n                    mainWindow.setFullScreen(!mainWindow.isFullScreen())\n                  },\n                },\n              ],\n      },\n      {\n        label: \"Help\",\n        submenu: [\n          {\n            label: \"Visit on Github\",\n            click() {\n              shell.openExternal(\"https://github.com/infinitered/reactotron\")\n            },\n          },\n        ],\n      },\n    ]\n    menu = Menu.buildFromTemplate(template)\n    mainWindow.setMenu(menu)\n  }\n})\n","module.exports = require(\"electron\");"],"sourceRoot":""}